jobs:
- job: Build
  displayName: Build and Test

  pool:
    vmImage: 'Ubuntu-16.04'

  steps:
  # Use GitVersion to determine the appropriate Semantic Version Number
  - task: GitVersion@5
    inputs:
      runtime: 'core'
  
  # Set the BuildNumber
  - script: |
      echo "##vso[build.updatebuildnumber]$(GitVersion.MajorMinorPatch)"
    displayName: 'Set Bulid Number'

  # Build and test the Terraform Installer Task
  # - template: azure-pipelines-task-build.yml
  #   parameters:
  #     workingDirectory: $(System.DefaultWorkingDirectory)/Tasks/TerraformInstaller

  # Build and test the Terraform Task
  - template: azure-pipelines-task-build.yml
    parameters:
      workingDirectory: $(System.DefaultWorkingDirectory)/Tasks/Terraform
  
  # Build the necessary extension files
  - script: |
      # Display command output and fail immediately on any errors
      set -e -x

      # Update the extension version
      sed -i 's/{{EXTENSION_VERSION}}/$(GitVersion.MajorMinorPatch)/g' vss-extension.json

      # Install deployment dependencies
      npm install --dev
     
      # Copy the necessary extension files to the output directory
      rsync -avr ./ \
        --exclude=* \
        --include=./node_modules \
        --include=./package.json \
        --include=./package-lock.json \
        --include=./vss-extension.json \
        $(Build.StagingDirectory)

  # Publish the relevant packages to a pipeline artifact 
  - publish: $(Build.StagingDirectory)
    artifact: extension